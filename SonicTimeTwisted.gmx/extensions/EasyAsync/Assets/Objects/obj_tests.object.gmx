<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///READ ME!

/*
    This object is not required, it's a series of EasyAsync tests.
    Only add it if you know what you're doing!
    
    - Signed, Nik the Cat.
*/


if (room != room_first) instance_destroy();
else alarm[0] = 2 * room_speed; //wait two seconds.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tests.

//Misc.
eas_log("Do we really need async? " + string(global.EAS_needasync));

//INI test
//eas_ini_close();
eas_ini_open("Test.ini");
//eas_ini_open("crash.ini");
ini_write_real("Hehe", "Real", 111);
ini_write_string("Meow", "AString", "WAAAAAAAAAAAAAAAAAAAAARIO");
show_debug_message(ini_read_string("Meow", "AString", "oh no"));
show_debug_message("a real " + string(ini_read_real("Hehe", "Real", 0)));
eas_ini_close();

//Text test

//Write test
f = eas_file_text_open_write("grossley.txt");
eas_file_text_write_string(f, "Grossley is the admin of Underminers server.");
repeat (100) eas_file_text_writeln(f);
eas_file_text_write_string(f, "m e o w");
eas_file_text_writeln(f);
eas_file_text_close(f);

//Read test
str = "";
f = eas_file_text_open_read("grossley.txt");
str += eas_file_text_read_string(f);
repeat (100) str += eas_file_text_readln(f);
str += eas_file_text_read_string(f);
str += eas_file_text_readln(f);
eas_file_text_close(f);

show_debug_message(str);

//Bin test
randomize();
f = eas_file_bin_open("test.bin", 2);
repeat (128) eas_file_bin_write_byte(f, irandom_range(1, 255));
eas_file_bin_close(f);

f = eas_file_bin_open("test.bin", 0);
arr = array_create(128);
var _a = 0; repeat (128) arr[_a++] = eas_file_bin_read_byte(f);
show_debug_message(string(arr));
eas_file_bin_close(f);
arr = undefined;

show_debug_message("Tests done!");
eas_save(scr_easyasync_callback); // this will call scr_easyasync_callback script when saving finished.
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Quit the game.
show_debug_message("game end called...");
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
