<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1026</depth>
  <persistent>0</persistent>
  <parentName>objInputMethodDependant</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inherit event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// title strings
title_word = 0;
title_speed =0.25;
flash = false;
opening=true;
closing=false;
selectorOffset = 102;
closeMenu = false;
for (var i=0; i&lt;4; i+=1)
{
    title_string[i] = "";
    title_length[i] = 0;
    title_pos[i] = 0;
    title_ox[i] = 0;
    title_scale[i, 0] = 12;
}

title_string[0] = "3";
title_string[1] = "2";
title_string[2] = "1";
title_string[3] = "G";
blue=make_colour_rgb(27,57,176);

init_titlecard(false);

set_input_enabled(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>counter for retry menu</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hide the opening card "Race metal Sonic"
flash = false;
opening=false;
visible=true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If objInputHelp is present, display the hint it contains
instance_activate_object(objInputHelp);
with(objInputHelp)
{
    visible = true;
    active = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// scale opening
if !opening exit;
    if title_word&lt;4
    {
        // ignore empty strings
        if title_length[title_word]&lt;1
        {
            title_word += 1;
        }
        // ignore if past string length
        else if title_pos[title_word]&lt;title_length[title_word]
        { 
            // decrease scale to normal
            title_scale[title_word, title_pos[title_word]] = max(title_scale[title_word, title_pos[title_word]]-title_speed, 1);
            if title_word &lt; 3 &amp;&amp; title_scale[title_word, title_pos[title_word]] == 1 play_sfx(sndDingOpen, 1);
            else if title_word == 3 &amp;&amp; title_scale[title_word, title_pos[title_word]] == 1 {
            
                // Start Race
                play_sfx(sndDingEnd, 1);
                
                if (!global.special_level_music_played) {
                    if (audio_is_playing(objMusic.musicIntro) == false &amp;&amp; audio_is_playing(objMusic.musicLoop) == false) {
                        play_music_intro(objMusic.musicIntroAsset,0);
                        global.special_level_music_played = true;
                    }
                }
                alarm[0] = 25;
                flash=true;
                with objSSLevel { started = true; }
                with objSSPlayer { started = true; }
                /// Enable controls
                set_input_enabled(true);
                
                }
            
            if title_scale[title_word, title_pos[title_word]]==1
            {
                // go to the next letter / word
                title_pos[title_word] += 1; 
                //if title_word&gt;2 {  title_speed = .5; }
                if title_pos[title_word]==title_length[title_word] {title_pos[title_word] -= 1; title_word += 1; }
                if title_word==4 alarm[0] = 120;
            }
        }
    }

if flash == true {

    if objScreen.image_index mod 4 == 0 {
        visible = !visible;
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Play Messages
if objScreen.paused exit;
d3d_set_projection_ortho(0, 0, view_wport, view_hport, 0);
// score / time / rings string
draw_set_font(objResources.fontHud);
draw_set_color(c_white);
draw_set_halign(fa_center);
if closeMenu == false {
    if(alarm[1]== -1)
    {
        if (objSSPlayer.kill &gt; 0)
        {
            var menu = objSSHud.menu;
            // allow the menu object to handle everything
            if(menu.state == 0)
            {
                var menu_to_use = menu_part_sstage_offtrack_items;
                if(objSSPlayer.kill == 1)
                {
                    menu_to_use = menu_part_sstage_norings_items;
                }
                else
                if(objSSPlayer.kill == 4)
                {
                    menu_to_use = menu_part_sstage_defeat_items;
                }
                set_smartphone_controls_enabled(false);
                with(menu) menu_fn_open_menu(menu_to_use, true, other.is_touchscreen);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Opening
if opening {
d3d_set_projection_ortho(0, 0, view_wport, view_hport, 0);
// title first word
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_font(objResources.fontTitleLarge);
draw_text(213,64,tr("_ss_intro_Race"));
// title second word
draw_set_color(blue);
draw_text(213,98,tr("_ss_intro_Metal_Sonic"));
/*if title_word&gt;0 for (i=0; i&lt;title_pos[1]+1; i+=1) draw_text_transformed(title_ox[1]+string_width(string_copy(title_string[1], 0, i))-70, 98, string_char_at(title_string[1], i+1), title_scale[1, i], title_scale[1, i], 0);
if title_word&gt;1 for (i=0; i&lt;title_pos[2]+1; i+=1) draw_text_transformed(title_ox[2]+string_width(string_copy(title_string[2], 0, i))+15, 98, string_char_at(title_string[2], i+1), title_scale[2, i], title_scale[2, i], 0);*/
draw_set_color(c_yellow);
//3
if title_word&gt;0 for (i=0; i&lt;title_pos[0]+1; i+=1) draw_text_transformed(title_ox[0]+string_width(string_copy(title_string[0], 0, i))-172, 132, string_char_at(title_string[0], i+1), title_scale[0, i], title_scale[0, i], 0);
//2
if title_word&gt;1 for (i=0; i&lt;title_pos[1]+1; i+=1) draw_text_transformed(title_ox[1]+string_width(string_copy(title_string[1], 0, i))-100, 132, string_char_at(title_string[1], i+1), title_scale[1, i], title_scale[1, i], 0);
//1
if title_word&gt;2 for (i=0; i&lt;title_pos[2]+1; i+=1) draw_text_transformed(title_ox[2]+string_width(string_copy(title_string[2], 0, i))-56, 132, string_char_at(title_string[2], i+1), title_scale[2, i], title_scale[2, i], 0);
//Go
if title_word&gt;3 draw_sprite_ext(sprSSHudGo,0,title_ox[3]+string_width(string_copy(title_string[3], 0, 0))+2, 132,title_scale[3, 0], title_scale[3, 0],0,c_white,1);
}

//if title_word&gt;4 for (i=0; i&lt;title_pos[5]+1; i+=1) draw_text_transformed(title_ox[5]+string_width(string_copy(title_string[5], 0, i))-56, 160, title_scale[title_word, title_pos[title_word]], title_scale[5, i], title_scale[5, i], 0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Closing
draw_set_font(objResources.fontHud);
draw_set_color(c_white);
draw_set_halign(fa_center);

var stoneNumber;

if objProgram.in_past {
    stoneNumber =objProgram.special_past_current_level;
} else {
    stoneNumber =objProgram.special_future_current_level;
}

var stoneNumberString;
switch stoneNumber {
    case 1: stoneNumberString = "1st" break;
    case 2: stoneNumberString = "2nd" break;
    case 3: stoneNumberString = "3rd" break;
    case 4: stoneNumberString = "4th" break;
    case 5: stoneNumberString = "5th" break;
    case 6: stoneNumberString = "6th" break;
    case 7: stoneNumberString = "7th" break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
