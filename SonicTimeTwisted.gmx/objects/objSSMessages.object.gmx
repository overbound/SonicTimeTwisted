<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1026</depth>
  <persistent>0</persistent>
  <parentName>objInputMethodDependant</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inherit event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// title strings
title_word = 0;
title_speed =0.25;
flash = false;
opening=true;
closing=false;
selectorOffset = 102;
closeMenu = false;
event_user(0);

blue=make_colour_rgb(27,57,176);

set_input_enabled(false);
alarm_set(2, 44);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Countdown at the beginning of the race
if title_word &lt; 4
{
    title_word += 1;
    if (title_word &lt;= 3)
    {
        play_sfx(sndDingOpen, 1);
        alarm_set(2, 44);
    }
    else
    {
        // Start Race
        play_sfx(sndDingEnd, 1);
        if (!global.special_level_music_played) {
            with (objMusic) {
                if (!audio_is_playing(musicIntro) &amp;&amp; !audio_is_playing(musicLoop)) {
                    play_music_intro(musicIntroAsset, 0);
                    global.special_level_music_played = true;
                }
            }
        }
        
        alarm[0] = 120;
        flash=true;
        with objSSLevel { started = true; }
        with objSSPlayer { started = true; }
        /// Enable controls
        set_input_enabled(true);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>counter for retry menu</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hide the opening card "Race metal Sonic"
flash = false;
opening=false;
visible=true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If objInputHelp is present, display the hint it contains
instance_activate_object(objInputHelp);
with(objInputHelp)
{
    visible = true;
    active = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// scale opening
if !opening exit;

if flash == true {

    if objScreen.image_index mod 4 == 0 {
        visible = !visible;
    }

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calculating string positions
show_go_separately = tr_get_real_prop("ss_start_go_is_longer") &gt; 0;

title_string[0] = "3";
title_string[1] = "2";
title_string[2] = "1";
title_string[3] = string_upper(tr("_ss_intro_Go"));

/// Originally, the "3 2 1 GO" countdown spans 263 pixels horizontally, from 81 to 344
var title_string_separator = 263;
draw_set_font(objResources.fontTitleLarge);
if(show_go_separately)
{
    for (i=0; i&lt;3; i+=1)
    {
        title_string_separator -= string_width(title_string[i]);
    }
    title_string_separator = round(title_string_separator/2);
    titre_string_pos[0] = 81;
    titre_string_pos[1] = titre_string_pos[0] + string_width(title_string[0]) + title_string_separator;
    titre_string_pos[2] = 344 - string_width(title_string[2]);
    titre_string_pos[3] = 81 + round((263 - string_width(title_string[3]))/2);
}
else
{
    for (i=0; i&lt;4; i+=1)
    {
        title_string_separator -= string_width(title_string[i]);
    }
    title_string_separator = round(title_string_separator/3);
    titre_string_pos[0] = 81;
    titre_string_pos[1] = titre_string_pos[0] + string_width(title_string[0]) + title_string_separator;
    titre_string_pos[2] = titre_string_pos[1] + string_width(title_string[1]) + title_string_separator;
    titre_string_pos[3] = 344 - string_width(title_string[3]);
}

draw_set_font(objResources.fontHud);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Play Messages
if objScreen.paused exit;
d3d_set_projection_ortho(0, 0, view_wport, view_hport, 0);
// score / time / rings string
draw_set_font(objResources.fontHud);
draw_set_color(c_white);
draw_set_halign(fa_center);
if closeMenu == false {
    if(alarm[1]== -1)
    {
        if (objSSPlayer.kill &gt; 0)
        {
            var menu = objSSHud.menu;
            // allow the menu object to handle everything
            if(menu.state == 0)
            {
                var menu_to_use = menu_part_sstage_offtrack_items;
                if(objSSPlayer.kill == 1)
                {
                    menu_to_use = menu_part_sstage_norings_items;
                }
                else
                if(objSSPlayer.kill == 4)
                {
                    menu_to_use = menu_part_sstage_defeat_items;
                }
                set_smartphone_controls_enabled(false);
                with(menu) menu_fn_open_menu(menu_to_use, true, other.is_touchscreen);
                
                with (objInput) {
                    analog_enabled = false;
                    analog_applied = false;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Opening
if opening {
    d3d_set_projection_ortho(0, 0, view_wport, view_hport, 0);
    // title first word
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_set_font(objResources.fontTitleLarge);
    draw_text(213,64,tr("_ss_intro_Race"));
    // title second word
    draw_set_color(blue);
    draw_text(213,98,tr("_ss_intro_Metal_Sonic"));
    draw_set_color(c_yellow);
    draw_set_halign(fa_left);
    if (show_go_separately)
    {
        if (title_word == 4)
        {
            draw_text(titre_string_pos[3], 132, title_string[3]);
        }
        else
        {
            for (var i=0; i&lt;3; i+=1)
            {
                if title_word&gt;i draw_text(titre_string_pos[i], 132, title_string[i]);
            }
        }
    }
    else
    {
        for (var i=0; i&lt;4; i+=1)
        {
            if title_word&gt;i draw_text(titre_string_pos[i], 132, title_string[i]);
        }
    }
}
draw_set_color(c_white);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
