<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSonicSSStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objSSParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,objSSCamera);
rings=0;
move_direction = 90;
move_speed = 0;
bounce_timer = 0;
radius = 24;
z = 24;//32
zground = z;
zspeed = 0;
onGround = true;
max_radius = 24;
bump_radius = max_radius;
jumping = false;
xaxis = 0;
yaxis = 0;
gravity_force=0.21875;
jump_force =4;
jump_release=false;
noTrack=0;
hit = false;
started = false;
closing = false;
progress = 0;
// kill states: 1 death by ring, 2 death by fallout, 3 death by loss
kill=0;
invincible=0;
landing_tracker = instance_create(x, y, objSSPlayerLandingTracker);
// set an alarm to make sure region activations aren't on every single step
alarm[1] = 1;
max_move_speed = 8;
direction_multiplier = -1.5;
cannot_accelerate = true;
decel = 0.1;
analog_current_yaxis = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>null counter</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>null counter</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// run character animations

switch objGameData.character_id[0] {

    case 1:
        SonicSpecialAnimation();
    break;
    
    case 2:
        TailsSpecialAnimation();
    break;
    
    case 3:
        KnucklesSpecialAnimation();
    break;

}

// invincible

if invincible &gt; 0 {
invincible -=1

visible = !visible;

}
else visible = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// region activation
// placing it here so that it plays at step end
if (alarm[1] == 0)
{
    instance_deactivate_all(true);
    instance_activate_object(objProgram);
    instance_activate_object(objSSLevel);
    instance_activate_object(objGameData);
    instance_activate_object(objResources);
    instance_activate_object(objMusic);
    instance_activate_object(objSSMessages);
    instance_activate_object(objSSHud);
    instance_activate_object(objScreen);
    instance_activate_object(objSSCamera);
    instance_activate_object(objTransition);
    instance_activate_object(objTrack);
    instance_activate_object(objSSMetalSonic);
    instance_activate_object(objInput);
    instance_activate_object(objInputHelp);
    instance_activate_object(objMenu);
    instance_activate_object(objSSPlayerLandingTracker);
    instance_activate_region(x-1408,y-1408,2816,2816,true);
    //instance_activate_region(x-1536,y-1536,3072,3072,true);
    alarm[1] = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>started</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls

if !hit {

if input_check_pressed(cACTION) and onGround {

      jumping = true;
      zspeed = jump_force;
      onGround = false;
      play_sfx(sndJump,0);    

}

if jumping == true &amp;&amp; jump_release == false{

        jump_force +=.25;

    if input_check_released(cACTION) {
    
        jump_release = true;
    
    } else if jump_force &gt;= 6.5 {
    
         jump_release = true;
         jump_force=6.5;
         
    }
    
    zspeed = jump_force;

}

if (objProgram.inputManager.analog_applied) {
    var analog_x = objProgram.inputManager.analog_x;
    var analog_y = objProgram.inputManager.analog_y;
    
    xaxis = sign(analog_x);
    
    if (analog_current_yaxis != 0) {
        if (xaxis == 0) &amp;&amp; (analog_y == 0) {
            analog_current_yaxis = 0;
        }
    } else {
        analog_current_yaxis = sign(analog_y);
        if (analog_current_yaxis) {
            if (xaxis != 0) {
                analog_current_yaxis = -1;   
            }
        }
        if (analog_current_yaxis &gt; 0) {
            analog_current_yaxis = 4;    
        }
    }
    yaxis = analog_current_yaxis;
    
    max_move_speed = 8*abs(analog_y);
    direction_multiplier = -1.5*abs(analog_x);
    // give some leeway, allow to accelerate while running ALMOST straight
    if (abs(analog_x) &gt; 0.1) {
        decel = max(0.1, analog_x/20.0);
    }
    else
    {
        decel = 0;
    }
} else {
    if (input_check(cLEFT)) xaxis = -1;
    else if (input_check(cRIGHT)) xaxis = 1;
    else xaxis = 0;
    
    if (input_check(cUP)) yaxis = -1;
    else if (input_check(cDOWN)) yaxis = 4;
    else yaxis = 0;
    
    max_move_speed = 8;
    direction_multiplier = -1.5;
    if (xaxis != 0) {
        decel = 0.1;
    }
    else
    {
        decel = 0;
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

var xmove, ymove, f;

if (bump_radius &lt; max_radius)
{
  bump_radius = bump_radius + (max_radius - bump_radius) * 0.25;
}

with(landing_tracker)
{
    if(!place_meeting(x, y, objTrack))
    {
        other.onGround = false;
        other.noTrack = true;
    }
    else
    {
        other.noTrack = false;
    }
}

move_direction += xaxis * direction_multiplier;

if (bounce_timer)
{
  bounce_timer -= 1;
  xmove = cos(degtorad(bounce_direction)) * move_speed;
  ymove = -sin(degtorad(bounce_direction)) * move_speed;
}
else
{
  move_speed += yaxis * -0.1;
  move_speed = max(move_speed, -2);
  if move_speed &gt; max_move_speed {
    move_speed -= .25;
  }
  
  xmove = cos(degtorad(move_direction)) * move_speed;
  ymove = -sin(degtorad(move_direction)) * move_speed;
}

if (bounce_timer)
{
  f = 0.1;
}
else
if (yaxis == 0)
{
    f = 0.1;
}
else
{
    f = decel;
}

if (move_speed &gt; f) move_speed -= f;
else if (move_speed &lt; -f) move_speed += f;
else move_speed = 0;

x += xmove;
y += ymove;



var b;

b = PlayerCollision();

if (b)
{
  move_speed *= 0.95;
}

view_xview = x - view_wview / 2;
view_yview = y - view_hview / 2;

image_angle = move_direction;
view_angle = 90 - move_direction;

landing_tracker.x = x;
landing_tracker.y = y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set depth
depth = min(2000,distance_to_object(objSSCamera)/20);

depth1= depth;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// track position
PlayerUpdateRacerProgress();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Landing
if (!onGround)
{
    zspeed-=gravity_force;
    z += zspeed

  if (z &lt;= radius)
  {
    if (z &gt;= 8 and !noTrack)
    {
      z = radius;
      zspeed = 0;
      onGround = true;
      hit=false;
      bump_radius = 2;
      jumping = false;
      jump_release=false;
      jump_force =4;
      
      if closing &gt; 0 {
      if objGameData.character_id[0] == 1 {
        sprite_index=sprSonicSSEnd;
        }
      else if objGameData.character_id[0] == 2 {
        sprite_index=sprTailsSSEnd;
      } else sprite_index=sprKnucklesSSEnd;
      
        image_speed = .25;
      }
      
        if kill &gt; 0 &amp;&amp; alarm[0] == -1 {
    
            alarm[0]=30;
    
        }
    }
    else {
    
    if (z &lt;= -1500)
    {
    
        if kill &lt; 1 {
            objSSMessages.alarm[1] = 30;
            kill = 2;
        }
        if alarm[0] = -1 {
            
            alarm[0]=30;
            exit;
      }
    }
    }
  }

  zspeed -= 0.2;
  zspeed = max(zspeed, -8);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSSMetalSonic">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>PlayerHarmfulCollision</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>other</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSSLife">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!onGround) exit;
switch other.image_index
 {
     case 2:
         play_sfx(sndRing, 0);
         rings +=10;
         if (rings mod 100 &lt;= 9) {
             player_get_lives(1);
         }
         break;
     case 4: play_sfx(sndRockSmash,1); objProgram.temp_shield = other.image_index-4; break;
     case 5: play_sfx(sndShieldBubble,1);  objProgram.temp_shield = other.image_index-4; break;
     case 6: play_sfx(sndShieldLightning,1);  objProgram.temp_shield = other.image_index-4; break;
     case 7: play_sfx(sndShieldFlame,1);  objProgram.temp_shield = other.image_index-4; break;
     case 8: play_sfx(sndShieldIce,1); objProgram.temp_shield = other.image_index-4; break;
     case 9: play_sfx(sndShieldWind,1); objProgram.temp_shield = other.image_index-4; break;
     default: player_get_lives(1);
 }
with other instance_destroy();
rumble(rumble_short_weakest);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSSBoost">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (!onGround) exit;
if other.sound == noone
    other.sound = play_sfx(sndSSSpeedBoost,1);
    
switch(other.image_index) {
case 0:
move_direction = 0;
break;
case 1:
move_direction = 45;
break;
case 2:
move_direction = 90;
break;
case 3:
move_direction = 135;
break;
case 4:
move_direction = 180
break;
case 5:
move_direction = 225;
break;
case 6:
move_direction = 270;
break;
}

move_speed=12;
// rumble
rumble(rumble_short_strong_and_mid);
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSSRingFly">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>PlayerRingCollision</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>other</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSSRing">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>PlayerRingCollision</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>other</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSSSpikeBall">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>PlayerHarmfulCollision</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>other</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSSBumper">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>PlayerBumperCollision</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>other</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSSMoleMissile">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>PlayerHarmfulCollision</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>other</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>play_sfx(sndBombExplosion,1);

with other {
    instance_create(x,y,obj3DExplosion);
    instance_destroy();
}
 



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSSEnemy">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>PlayerBadnikCollision</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>other</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objField">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Level End
if z &gt;= 24 {
    started=false;
    closing=true;
    move_speed=0;
    objSSLevel.cleared = true;
    objSSLevel.timer_enabled = false;
    
    // win an emerald/stone
    if progress &gt; objSSMetalSonic.progress {
    
        with objSSMessages { closing=2; }
        with instance_create(x,y,objSSEmerald) depth = -1;
        
        if objProgram.in_past {
        
            objProgram.special_past_current_level+=1;
        
        } else objProgram.special_future_current_level+=1;
        
        if image_speed &gt; 0 {
        // turn animation
        if objGameData.character_id[0] == 1 {
            sprite_index=sprSonicSSEnd;
        } else if objGameData.character_id[0] == 2  {
            sprite_index=sprTailsSSEnd;
        } else sprite_index=sprKnucklesSSEnd;
         image_speed = .25;  
         }  
        save_emeralds();
        save_big_ring();
        stt_save_files();
        
    } else {
        with objSSMessages { closing=1; }
        if objGameData.character_id[0] == 1 {
            sprite_index=sprSonicSSStand;
        } else if objGameData.character_id[0] == 2  {
            sprite_index=sprTailsSSStand;
        } else sprite_index=sprKnucklesSSStand;
         image_speed = 0;  
         objSSPlayer.kill = 4;
        }  
        
    
    with other instance_destroy();

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_color(c_blue);
draw_set_alpha(0.5);
d3d_draw_ellipsoid(
  x - radius,
  y - radius,
  z - radius,
  x + radius,
  y + radius,
  z + radius,
  -1, 1, 1, 16
);*/

/*draw_set_alpha(1);*/

//d3d_set_projection_ortho(0, 0, view_wport, view_hport, 0);
//draw_sprite_ext(sprite_index,image_index,213,200,image_xscale,image_yscale,0,c_white,1);
if (!noTrack) draw_shadow(16);
draw_billboard(sprite_width*.45 , sprite_height*.45 );

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>15,24</point>
    <point>24,24</point>
  </PhysicsShapePoints>
</object>
