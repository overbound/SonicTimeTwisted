<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1026</depth>
  <persistent>0</persistent>
  <parentName>objSceneObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
image_speed = 0;
// 0 - first fade in
// 1 - screen with text (disclaimer/epilepsy)
// 2 - fade to OGS logo
// 3 - standard title screen behavior
// 4 - the disclaimer screen is opened from the options screen
state = 0;
alarm[0] = -1;
textAlpha = 0;
name=0;
levelSelect = 0;
start = false;
pauseOffset = 0;
pauseState = 3;
controlState = 0;
axis = "";
screenAlpha = 0;
gamepadSupport = true;
logoAlpha = 4;

skipping = 0;
// allow skipping after first launch
allow_skipping = !objProgram.first_run;
if(allow_skipping)
{
   event_user(0);
}
event_user(2);
level_select_max_presses = 0;
menu = instance_create(x,y,objMenu);
menu.default_state = 1;

// Names of the original team behind the game.
// The crawl is hardcoded to only include 6 names, and should remain this way
names = false;
names[0] = tr('Bryce Stock (Overbound)');
names[1] = tr('Hinchy');
names[2] = tr('VectorSatyr');
names[3] = tr('Dee Liteyears');
names[4] = tr('Mercury');
names[5] = tr('Shane (Sparks)');

// initialize the disclaimer screen in a dedicated event
event_user(1);
menu_is_touchscreen = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>name++;
if(name &lt; 12)
{
    alarm[0] = 65;
}
if(name == 9)
{
    play_effect(bgmTitle, false);
}
if name &gt; 2 &amp;&amp; name &lt; 9 {
    play_sfx(sndTock,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// menu end step
if(state == 3 &amp;&amp; skipping == 0)
{
    if menu.state != 0 {
        with(menu) event_user(2);
    }
    image_index = objScreen.image_index div 8;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// handle returning from state 4 (displaying the disclaimers when called from the options menu)
if(state == 4)
{
    if(is_fallback_touchscreen)
    {
        if(device_mouse_check_button_released(0, mb_left))
        {
            menu_is_touchscreen = true;
            state = 3;
            with(menu)
            {
                state = 2;
                menu_fn_reset_inputs();
            }
        }
    }
    if(!is_touchscreen)
    {
        if(input_check_pressed(cB))
        {
            play_sfx(sndCancel);
            menu_is_touchscreen = false;
            state = 3;
            with(menu)
            {
                state = 2;
                menu_fn_reset_inputs();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// menu begin step
if(state == 3 &amp;&amp; skipping == 0)
{
    if menu.state != 0 {
        with(menu) event_user(1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>state</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>3</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(state)
{
    case 0:
        if(textAlpha &lt; 1)
        {
            textAlpha += 0.033;
        }
        if(textAlpha &gt;= 1)
        {
            textAlpha = 1;
            state = 1;
        }
        break;
    case 1:
        if(is_fallback_touchscreen)
        {
            if(device_mouse_check_button_pressed(0, mb_left))
            {
                state = 2;
            }
        }
        if(!is_touchscreen)
        {
            if(input_check_pressed(cSTART))
            {
                state = 2;
            }
        }
        break;
    case 2:
        textAlpha -= 0.033;
        if(textAlpha &lt;= 0)
        {
            // Launch the default logo + name crawl intro
            event_user(0);
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>state</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>4</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>skipping</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start Menu
if(pauseState == 0)
{
    // allow the menu object to handle everything
    if(menu.state == 0 &amp;&amp; !instance_exists(objTransition))
    {
        with(menu) menu_fn_open_menu(menu_part_title_items, false, other.menu_is_touchscreen);
    }
    
    with(menu) event_user(0);
}
else
if(pauseState == 3)
{
    // update message based on the current input method
    event_user(2);
    
    if(start &amp;&amp; menu.state == 0)
    {
        var do_start = false;
        script_execute(switch_script);
        if(is_fallback_touchscreen)
        {
            do_start = (levelSelect &lt; 6 &amp;&amp; device_mouse_check_button_pressed(0, mb_left))
                || (levelSelect &gt;= 6 &amp;&amp; level_select_max_presses &lt; 2 &amp;&amp; device_mouse_check_button_released(0, mb_left));
            if(do_start)
            {
                menu_is_touchscreen = true;
            }
        }
        if(!is_touchscreen)
        {
            do_start = input_check_pressed(cSTART);
            if(do_start)
            {
                menu_is_touchscreen = false;
            }
        }
        if do_start {
            pauseState=0;
            with objTitlescreenPlane { hsp = 0; image_speed = 0 }
            with objTitleSonic image_speed = 0;
        }
    }
}
// fade in black for menu backer    
if pauseState != 3 {
    if screenAlpha &lt; .75 {
        screenAlpha+=.025;
    }
}
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Skipping to title and Level Select Code
if(menu.state == 0)
{
    // are we restarting?
    with (objProgram) if (check_cheatcode) other.levelSelect = 6; // here `other` is the title control object.
    
    // update interface based on the current input method
    // adds a little overhead, but nothing comparable with the rest of the game :)
    event_user(2);
    if(is_touchscreen)
    {
        // level select touchscreen version - tap on every displayed name, then touch the title screen with two fingers
        if(levelSelect &lt; 6)
        {
            if(device_mouse_check_button_pressed(0, mb_left))
            {
                // the skip button does not count
                var skip_pressed = false;
                if(allow_skipping &amp;&amp; name &lt; 9)
                {
                    skip_pressed =  is_skip_button_pressed();      
                }
                if(skip_pressed)
                {
                    // skip to title screen
                    if(skipping == 0)
                    {
                        skipping = 1;
                    }
                }
                else
                {
                    if(name &lt; 12 &amp;&amp; (!skip_pressed))
                    {
                        if(levelSelect == 0 &amp;&amp; name == 3)
                        {
                            levelSelect = 1;
                        }
                        else
                        {
                            if(levelSelect == 1 &amp;&amp; name == 4)
                            {
                                levelSelect = 2;
                            }
                            else
                            {
                                if(levelSelect == 2 &amp;&amp; name == 5)
                                {
                                    levelSelect = 3;
                                }
                                else
                                {
                                    if(levelSelect == 3 &amp;&amp; name == 6)
                                    {
                                        levelSelect = 4;
                                    }
                                    else
                                    {
                                        if(levelSelect == 4 &amp;&amp; name == 7)
                                        {
                                            levelSelect = 5;
                                        }
                                        else
                                        {
                                            if(levelSelect == 5 &amp;&amp; name == 8)
                                            {
                                                play_sfx(sndRing,0);
                                                levelSelect = 6;
                                                level_select_max_presses = 0;
                                                with (objProgram) check_cheatcode = true;
                                                show_debug_message("Touchscreen name cheatcode entered!");
                                            }
                                        }                    
                                    }
                                }            
                            }
                        }
                    }
                }
            }
        }
        else
        {
            if (name == 12 &amp;&amp; state &gt;= 2)
            {
                // touchscreen version
                if(levelSelect == 6)
                {
                    var levelSelectPresses = 0;
                    if (device_mouse_check_button(0, mb_left))
                    {
                        levelSelectPresses++;
                    }
                    if (device_mouse_check_button(1, mb_left))
                    {
                        levelSelectPresses++;
                    }
                    if (device_mouse_check_button(2, mb_left))
                    {
                        levelSelectPresses++;
                    }
                    if (device_mouse_check_button(3, mb_left))
                    {
                        levelSelectPresses++;
                    }
                    if (device_mouse_check_button(4, mb_left))
                    {
                        levelSelectPresses++;
                    }
                    level_select_max_presses = max(level_select_max_presses, levelSelectPresses);
                    // detect whether we are currently releasing the last "mouse button"
                    var levelSelectReleases = 0;
                    if (device_mouse_check_button_released(0, mb_left))
                    {
                        levelSelectReleases++;
                    }
                    if (device_mouse_check_button_released(1, mb_left))
                    {
                        levelSelectReleases++;
                    }
                    if (device_mouse_check_button_released(2, mb_left))
                    {
                        levelSelectReleases++;
                    }
                    if (device_mouse_check_button_released(3, mb_left))
                    {
                        levelSelectReleases++;
                    }
                    if (device_mouse_check_button_released(4, mb_left))
                    {
                        levelSelectReleases++;
                    }
                    if(level_select_max_presses &gt;= 2 &amp;&amp; levelSelectPresses == 0 &amp;&amp; levelSelectReleases == 1)
                    {
                        if(!instance_exists(objTransition))
                        {
                            pauseState = 0;
                            objProgram.special_future_current_level = 0;
                            objProgram.special_past_current_level = 0;
                            with(menu) menu_fn_open_menu(menu_part_levelselect_char_items, false, true);
                        }
                    }
                }
            }
        }
    }
    if(!is_touchscreen)
    {
        // button version - left, left, right, right, up, down, a+start
        switch(levelSelect) {
        case 0:
            if input_check_pressed(cLEFT) {
                levelSelect +=1;
            }
        break;
        case 1:
            if input_check_pressed(cLEFT) {
                levelSelect +=1;
            } else if input_check_pressed(cRIGHT) || input_check_pressed(cUP) || input_check_pressed(cDOWN) {
                levelSelect = 0;
            }
        break;
        case 2:
            if input_check_pressed(cRIGHT) {
                levelSelect +=1;
            } else if input_check_pressed(cLEFT) || input_check_pressed(cUP) || input_check_pressed(cDOWN) {
                levelSelect = 0;
            }
        break;
        case 3:
            if input_check_pressed(cRIGHT) {
                levelSelect +=1;
            } else if input_check_pressed(cLEFT) || input_check_pressed(cUP) || input_check_pressed(cDOWN) {
                levelSelect = 0;
            }
        break;
        case 4:
            if input_check_pressed(cUP) {
                levelSelect +=1;
            } else if input_check_pressed(cRIGHT) || input_check_pressed(cLEFT) || input_check_pressed(cDOWN) {
                levelSelect = 0;
            }
        break;
        case 5:
            if input_check_pressed(cDOWN) &amp;&amp; pauseState == 3 {
                levelSelect +=1;
                play_sfx(sndRing,0);
                with (objProgram) check_cheatcode = true;
                show_debug_message("LLRRUD cheatcode entered!");
            } else if input_check_pressed(cRIGHT) || input_check_pressed(cUP) || input_check_pressed(cLEFT) {
                levelSelect = 0;
            }
        break;
        case 6:
            if (state &gt;= 2 &amp;&amp; name == 12)
            {
                if input_check(cA) &amp;&amp; input_check(cSTART) {
                    // allow the menu object to handle everything
                    if(!instance_exists(objTransition))
                    {
                        objProgram.special_future_current_level = 0;
                        objProgram.special_past_current_level = 0;
                        with(menu) menu_fn_open_menu(menu_part_levelselect_char_items, false, false);
                    }
                    
                    with(menu) event_user(0);
                    
                } else if input_check_pressed(cRIGHT) || input_check_pressed(cUP) || input_check_pressed(cDOWN) || input_check_pressed(cB) || input_check_pressed(cC){
                    levelSelect = 0;
                }
            }
        break;
        }
        if(levelSelect == 0)
        {
            if(allow_skipping &amp;&amp; name &lt; 9)
            {
                if input_check(cSTART) {
                    // skip to title screen
                    if(skipping == 0)
                    {
                        skipping = 1;
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// alpha control
if(state &gt;= 3) {
    if (name &lt; 3) {
        logoAlpha -= 0.025;
        logoAlpha = clamp(logoAlpha, 0, 4);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// manage skipping to title

event_user(2);
skipping++;
if(skipping == 30)
{
    // the skipping itself
    name = 12;
    play_effect(bgmTitle, false);
    alarm[0] = -1;
    with(objTitleSonic)
    {
        event_user(0);
    }
}
if(skipping &gt;= 60)
{
    skipping = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update PRESS START/TOUCH SCREEN prompt

sync_is_touchscreen();
if(is_touchscreen)
{
    startText = tr('_startText_MO');
}
else
{
    startText = tr('_startText_PC');
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reorganize the disclaimer screen
// In case the locale is changed and the screen is displayed afterwards

epilepsy_title = tr("_epilepsy_title");
epilepsy = tr("_epilepsy");
disclaimer_title = tr("_disclaimer_title");
disclaimer = tr("_disclaimer");
github = tr("_github");

// because of localizations, we'll need to calculate the optimum placement for
// disclaimer titles and texts

draw_set_font(objResources.fontHud);
var epilepsy_title_height = string_height(epilepsy_title);
var disclaimer_title_height = string_height(disclaimer_title);

var line_length = view_wview[view_current] - 8;
draw_set_font(objResources.fontMicro);
var epilepsy_height = epilepsy_title_height + string_height_ext(epilepsy, 12, line_length) + 4;
var disclaimer_height = disclaimer_title_height + string_height_ext(disclaimer, 12, line_length) + 4;
var github_height = string_height_ext(github, 12, line_length);

var text_skip = floor((view_hview[view_current] - epilepsy_height - disclaimer_height - github_height)/4);

epilepsy_title_y = text_skip;
epilepsy_y = epilepsy_title_y + epilepsy_title_height + 4;
disclaimer_title_y = epilepsy_title_y + epilepsy_height + text_skip;
disclaimer_y = disclaimer_title_y + disclaimer_title_height + 4;
github_y = disclaimer_title_y + disclaimer_height + text_skip;;

draw_set_font(objResources.fontHud);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Launch the default logo + name crawl intro
textAlpha = 0;
state = 3;
instance_create(x,y,objTitleEffects);
instance_create(224, -160, objTitleSonic);

with (instance_create(516, 1060, objTitleCloud0))
{
    image_xscale = -1;
}

with(instance_create(340, 1200, objTitleCloud1))
{
    image_xscale = -1;
}
instance_create(120, 1356, objTitleCloud0);
with(instance_create(-208, 1492, objTitleCloud1))
{
    image_yscale = 1.05;
}
alarm[0]=80;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// stop audio
audio_stop_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(state &gt;= 2)
{
    with(menu) event_user(3);
}
if(state &gt;= 2)
{
    if(allow_skipping)
    {
        if(name &lt; 9 &amp;&amp; is_touchscreen)
        {
           draw_sprite(sprTouchscreenFastForward, 0, view_wview[0] - 28, 4);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(state &gt;= 2)
{
    draw_set_font(objResources.fontHud);
    
    /// Render Names
    // fade for menu
    draw_set_alpha(screenAlpha);
    draw_set_color(c_black);
    draw_rectangle(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,false);
        
    // setup
    draw_set_color(c_white);
    draw_set_alpha(image_alpha);
    draw_set_valign(fa_top);
    draw_set_halign(fa_center);
    draw_set_font(objResources.fontHud);
    
    switch name {
        case 0:
        case 1:
        case 2:
            var lA = clamp(logoAlpha, 0, 1);
            draw_set_color(c_black);
            draw_set_alpha(lA);
            draw_rectangle(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,false);
            draw_set_alpha(1);
            draw_set_color(c_white);
            draw_sprite_ext(sprOverboundLogo,0,view_xview[0]+213,view_yview[0]+90,1,1,0,c_white,lA);
            draw_text_color(view_xview[0]+213,view_yview[0]+15,tr('_splash_ASonicfangame'),c_white,c_white,c_teal,c_teal,lA);
            draw_text_color(view_xview[0]+213,view_yview[0]+150,tr('_splash_ThisGameIsFreeware'),c_white,c_white,c_teal,c_teal,lA);
            draw_text_color(view_xview[0]+213,view_yview[0]+170,tr('_splash_DoNotSell'),c_white,c_white,c_red,c_red,lA);
            break;
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
            var yshift = 120;
            if(alarm[0] &gt;= 60)
            {
                yshift = yshift + 27 + (alarm[0] - 60) * 32;
            }
            else
            if(alarm[0] &gt; 5)
            {
                yshift = yshift - 27 + alarm[0] - 5;
            }
            else
            {
                yshift = yshift - 27 - (5 - alarm[0]) * 32;            
            }
            draw_text_color(view_xview[0]+213,view_yview[0]+yshift,names[name - 3],c_white,c_white,c_yellow,c_yellow,1);
            break;
        case 12:
            if (pauseState == 3) {
                draw_text_color(view_xview[0]+213, view_yview[0]+228, startText,c_white,c_white,c_yellow,c_yellow,1); 
            }
            start=true;
            break;
    }
    draw_set_halign(fa_center);
    draw_set_color(c_white);
    if(skipping &gt; 0)
    {
        if(skipping &lt;= 30)
        {
            draw_set_alpha(skipping/30);
        }
        else
        {
            draw_set_alpha((60 - skipping)/30);    
        }
        draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0], false);
        draw_set_alpha(1);
    }
}
if(state &lt;= 2 || state == 4)
{
    if(state == 0 || state == 4)
    {
        draw_set_alpha(1);
    }
    else
    {
        draw_set_alpha(textAlpha);
    }
    draw_set_color(c_black);
    draw_rectangle(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,false);
    draw_set_color(c_white);
    draw_set_alpha(textAlpha);
    
    var text_origin = view_wview[view_current]/2;
    var line_length = view_wview[view_current] - 8;
    
    draw_set_halign(fa_center);
    
    draw_set_font(objResources.fontHud);
    draw_text_colour(text_origin, view_yview[view_current] + epilepsy_title_y, epilepsy_title, c_red, c_red, c_white, c_white, textAlpha);
    draw_set_font(objResources.fontMicro);
    draw_text_ext_colour(text_origin, view_yview[view_current] + epilepsy_y, epilepsy, 12, line_length, c_ltgray, c_ltgray, c_white, c_white, textAlpha);
    
    
    draw_set_font(objResources.fontHud);
    draw_text_colour(text_origin, view_yview[view_current] + disclaimer_title_y, disclaimer_title, c_red, c_red, c_white, c_white, textAlpha);
    draw_set_font(objResources.fontMicro);
    draw_text_ext_colour(text_origin, view_yview[view_current] + disclaimer_y, disclaimer, 12, line_length, c_ltgray, c_ltgray, c_white, c_white, textAlpha);
    draw_text_ext_colour(text_origin, view_yview[view_current] + github_y, github, 12, line_length, c_blue, c_blue, c_white, c_white, textAlpha);
    draw_set_alpha(1);   
}
/// version number
if(menu.state &gt; 0 &amp;&amp; state != 4)
{
    draw_set_font(objResources.fontLives);
    draw_set_halign(fa_right);
    draw_set_valign(fa_bottom);
    draw_text(
        view_xview[view_current] + view_wview[view_current],
        view_yview[view_current] + view_hview[view_current],
        VERSION
    );
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
